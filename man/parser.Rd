% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parser.R
\name{parser}
\alias{parser}
\title{Parse Sentences}
\usage{
parser(text.var, parse.annotator = easy_parse_annotator(),
  word.annotator = word_annotator(), element.chunks = floor(2000 *
  (23.5/mean(sapply(text.var, nchar), na.rm = TRUE))))
}
\arguments{
\item{text.var}{The text string variable.}

\item{parse.annotator}{A parse annotator.  See \code{?parse_annotator}.  Due
to \pkg{Java} memory allocation limits the user must generate the annotator
and supply it directly to \code{parser}.}

\item{word.annotator}{A word annotator.}

\item{element.chunks}{The number of elements to include in a chunk. Chunks are
passed through an \code{\link[base]{lapply}} and size is kept within a tolerance
because of memory allocation in the tagging process with \pkg{Java}.}
}
\value{
Returns a list of character vectors of parsed sentences.
}
\description{
A wrapper for \pkg{NLP},/\pkg{openNLP}'s named sentence parsing tools.
}
\examples{
\dontrun{
txt <- c(
    "Really, I like chocolate because it is good. It smells great.",
    "Robots are rather evil and most are devoid of decency.",
    "He is my friend.",
    "Clifford the big red dog ate my lunch.",
    "Professor Johns can not teach",
    "",
    NA
)

if(!exists('parse_ann')) {
    parse_ann <- parse_annotator()
}
(x <- parser(txt, parse_ann))
par(mar = c(0,0,0,.7) + 0.2)
plot(x[[2]])
par(
    mfrow = c(3, 2),
    mar = c(0,0,1,1) + 0.1
)
lapply(x[1:5], plot)
}
}
\keyword{parse}
\keyword{sentence}

